import 'dotenv/config';
import {randomBytes} from 'crypto';
import fastify from 'fastify';
import secureSession from '@fastify/secure-session';

const {NODE_ENV} = process.env;
const HOST = process.env.HOST || '0.0.0.0';
const PORT = process.env.PORT ? parseInt(process.env.PORT) : 3000;
let {SESSION_KEY} = process.env;

const server = fastify({
  ignoreTrailingSlash: true,
  logger: {
    level: NODE_ENV === 'development' ? 'trace' : 'debug',
    transport: {
      target: '@fastify/one-line-logger',
    },
  },
});

if (!SESSION_KEY) {
  const message = 'SESSION_KEY environment variable is not set';

  if (NODE_ENV === 'development') {
    SESSION_KEY = randomBytes(32).toString('base64');
    server.log.warn(`${message}, using autogenerated key: ${SESSION_KEY}`);
  } else throw new Error(message);
}

void server.register(secureSession, {key: SESSION_KEY});

server.get('/ping', async (request, reply) => {
  return 'pong\n';
});

void server.listen({host: HOST, port: PORT});
